{
  "meta": {
    "project": "Hashtag-Based Social Platform",
    "version": "1.0.0",
    "date": "2024-06-01",
    "prepared_by": "Generated by Software Development Manager"
  },
  "product_overview": "A web-based social platform focused on hashtag-centered content creation and discovery, enabling users to interact through posts, endorsements, and comments within an invite-only community.",
  "core_goals": [
    "Enable a secure invite-only user registration and authentication system.",
    "Facilitate user-generated content creation with mandatory hashtag tagging and optional anonymity.",
    "Provide a dynamic main feed for content discovery with filtering by hashtags.",
    "Allow rich post interactions through endorsements and comments with real-time updates.",
    "Display comprehensive user profiles including posts and hashtag statistics.",
    "Implement a hashtag discovery system featuring trending and common hashtags for enhanced visibility.",
    "Ensure a responsive, accessible, and user-friendly interface with error handling and feedback."
  ],
  "key_features": [
    "Invite-only user authentication with registration, login, logout, and session management.",
    "User profiles showcasing posts and endorsement statistics.",
    "Post creation including mandatory hashtag tagging and optional anonymous posting.",
    "Main feed displaying posts with hashtag-based filtering capabilities.",
    "Endorsements system allowing users to like posts once with real-time update feedback.",
    "Comprehensive commenting system with collapsible display and persistence.",
    "Hashtag discovery functionality with trending and common hashtags display.",
    "Post management including deletion by authors with confirmation dialogs.",
    "Responsive and accessible UI built with React, Tailwind CSS, and shadcn/ui components.",
    "RESTful backend API built with Express.js, PostgreSQL, and Drizzle ORM.",
    "Client-side state management via TanStack Query and React hooks.",
    "Robust error handling and validation using Zod and user-friendly toast notifications."
  ],
  "user_flow_summary": [
    "New users register using a valid invite code, username, email, and password and then log in.",
    "Authenticated users create posts by entering content and selecting a hashtag; optionally marking posts as anonymous.",
    "Users browse the main feed with the ability to filter posts by hashtags or view trending/common hashtags.",
    "Users endorse posts with a single like per post; endorsements update instantly in the UI.",
    "Users comment on posts; comments appear in a collapsible section and are persisted across refreshes.",
    "Post authors delete their own posts after confirmation prompts.",
    "Users visit profile pages to view posts and summarize hashtag endorsement statistics.",
    "Users experience seamless navigation across feed, profile, and authentication pages, with responsive design on mobile and desktop."
  ],
  "validation_criteria": [
    "Invite code validation required for new user registrations.",
    "Only authenticated users can create posts, endorse posts, and comment.",
    "Posts must have exactly one hashtag associated and can be optionally anonymous.",
    "Users can only endorse each post once; endorsements increment visually and persist.",
    "Comments are saved and displayed correctly with real-time UI updates.",
    "Post deletion succeeds only for the author with a confirmation step.",
    "Hashtag filtering and trending displays are accurate and updated according to endorsements.",
    "User profile pages correctly aggregate and display post and hashtag statistics.",
    "All UI components are responsive, accessible, and show appropriate feedback and error messages.",
    "API endpoints function correctly for all CRUD operations with secure session-based authentication.",
    "Validation errors and backend errors generate clear, actionable messages in the frontend toasts."
  ],
  "code_summary": {
    "tech_stack": [
      "TypeScript",
      "React",
      "Vite",
      "Express.js",
      "Node.js",
      "PostgreSQL",
      "Drizzle ORM",
      "TanStack Query",
      "Tailwind CSS",
      "shadcn/ui",
      "Wouter",
      "Zod",
      "bcryptjs"
    ],
    "features": [
      {
        "name": "Authentication System",
        "description": "Complete invite-only user authentication with registration, login, logout, and session management",
        "files": [
          "client/src/components/auth/AuthForms.tsx",
          "client/src/components/auth/InviteCodeForm.tsx",
          "client/src/lib/auth.ts",
          "server/routes.ts"
        ]
      },
      {
        "name": "Post Management",
        "description": "Create, view, delete posts with mandatory hashtags and optional anonymous posting",
        "files": [
          "client/src/components/post/PostForm.tsx",
          "client/src/components/post/PostCard.tsx",
          "server/routes.ts",
          "server/storage.ts"
        ]
      },
      {
        "name": "Comments System",
        "description": "Full commenting functionality with collapsible UI and persistence across page refreshes",
        "files": [
          "client/src/components/post/PostCard.tsx",
          "server/routes.ts",
          "server/storage.ts",
          "shared/schema.ts"
        ]
      },
      {
        "name": "Endorsements System",
        "description": "Like/dislike functionality with user restrictions and real-time updates",
        "files": [
          "client/src/components/post/PostCard.tsx",
          "server/routes.ts",
          "server/storage.ts",
          "shared/schema.ts"
        ]
      },
      {
        "name": "Hashtag Discovery",
        "description": "Hashtag filtering, trending hashtags display, and common hashtags suggestions",
        "files": [
          "client/src/components/post/HashtagFilter.tsx",
          "client/src/pages/feed.tsx",
          "server/routes.ts",
          "server/storage.ts",
          "shared/schema.ts"
        ]
      },
      {
        "name": "User Profiles",
        "description": "User profile pages with posts display and hashtag statistics",
        "files": [
          "client/src/components/profile/ProfileCard.tsx",
          "client/src/components/profile/HashtagStats.tsx",
          "client/src/pages/profile.tsx",
          "server/routes.ts",
          "server/storage.ts"
        ]
      },
      {
        "name": "Feed System",
        "description": "Main feed displaying all posts with filtering capabilities and real-time updates",
        "files": [
          "client/src/pages/feed.tsx",
          "client/src/components/post/PostCard.tsx",
          "server/routes.ts",
          "server/storage.ts"
        ]
      },
      {
        "name": "Navigation and Layout",
        "description": "Responsive navigation bar and footer with user authentication state management",
        "files": [
          "client/src/components/layout/Navbar.tsx",
          "client/src/components/layout/Footer.tsx",
          "client/src/App.tsx"
        ]
      },
      {
        "name": "UI Components Library",
        "description": "Comprehensive set of reusable UI components built with shadcn/ui and Radix UI",
        "files": [
          "client/src/components/ui/button.tsx",
          "client/src/components/ui/card.tsx",
          "client/src/components/ui/dialog.tsx",
          "client/src/components/ui/form.tsx",
          "client/src/components/ui/input.tsx",
          "client/src/components/ui/toast.tsx",
          "client/src/components/ui/badge.tsx",
          "client/src/components/ui/separator.tsx",
          "client/src/components/ui/skeleton.tsx"
        ]
      },
      {
        "name": "Database Schema and Storage",
        "description": "PostgreSQL database with Drizzle ORM for users, posts, comments, endorsements, and invites",
        "files": [
          "shared/schema.ts",
          "server/storage.ts",
          "drizzle.config.ts"
        ]
      },
      {
        "name": "API Routes",
        "description": "RESTful API endpoints for all application functionality including CRUD operations",
        "files": [
          "server/routes.ts",
          "server/index.ts"
        ]
      },
      {
        "name": "State Management",
        "description": "Client-side state management using TanStack Query for server state and React hooks for local state",
        "files": [
          "client/src/lib/queryClient.ts",
          "client/src/hooks/use-toast.ts",
          "client/src/hooks/use-mobile.tsx",
          "client/src/hooks/useWindowWidth.ts"
        ]
      },
      {
        "name": "Utilities and Helpers",
        "description": "Utility functions for hashtag colors, form validation, and common operations",
        "files": [
          "client/src/lib/utils.ts",
          "client/src/lib/hashtagColors.ts",
          "shared/schema.ts"
        ]
      },
      {
        "name": "Error Handling and Validation",
        "description": "Comprehensive error handling with Zod validation and user-friendly error messages",
        "files": [
          "server/routes.ts",
          "shared/schema.ts",
          "client/src/components/ui/toast.tsx"
        ]
      },
      {
        "name": "Responsive Design",
        "description": "Mobile-friendly responsive design with Tailwind CSS and custom breakpoints",
        "files": [
          "client/src/index.css",
          "tailwind.config.ts",
          "client/src/hooks/use-mobile.tsx",
          "client/src/hooks/useWindowWidth.ts"
        ]
      }
    ]
  }
}
